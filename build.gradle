buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.6.3'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
        classpath 'org.ajoberstar:gradle-git:1.3.2'
        classpath 'org.kordamp.gradle:stats-gradle-plugin:0.2.0'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.12.0'
        classpath 'net.nemerosa:versioning:2.1.0'
    }
}

apply plugin: 'idea'
apply plugin: 'groovy'
apply plugin: 'com.github.ben-manes.versions'
apply from: 'gradle/publishing.gradle'

repositories {
    jcenter()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.6'
    compile 'ch.qos.logback:logback-classic:1.1.7'
    compile 'com.zaxxer:HikariCP:2.4.7'
    compile 'org.postgresql:postgresql:9.4-1206-jdbc42'
    compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.2'

    testCompile "org.spockframework:spock-core:1.0-groovy-2.4"
}

task sourcesJar(type: Jar) {
    group 'Build'
    description 'An archive of the source code'
    classifier 'sources'
    from sourceSets.main.allSource
}

test {
    testLogging {
        events "failed"
        exceptionFormat "short"
        showStandardStreams = true
    }
}

task copyTestResources(type: Copy) {
    from "${projectDir}/src/test/resources"
    into "${buildDir}/classes/test"
}
processTestResources.dependsOn copyTestResources

jar.finalizedBy sourcesJar

artifacts {
    sourcesJar
}

gradle.taskGraph.whenReady {
    def createIfNotExists = { File dir ->
        if (!dir.exists()) {
            dir.mkdirs()
        }
    }

    String sourceSetName = project.plugins.hasPlugin('groovy') ? 'groovy' : 'java'
    sourceSets.main[sourceSetName].srcDirs.each(createIfNotExists)
    sourceSets.test[sourceSetName].srcDirs.each(createIfNotExists)
    sourceSets.main.resources.srcDirs.each(createIfNotExists)
    sourceSets.test.resources.srcDirs.each(createIfNotExists)
}
